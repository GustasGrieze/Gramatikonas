@page "/punctuationtask"
@inherits PunctuationTaskBase

@if (!startExercise)
{
    <TaskUploadPrompt OnTaskUploaded="LoadCustomTasks" OnUseDefaultTasks="StartWithDefaultTasks" />
}
else
{
    @if (!showSummary)
    {
        <h1>Skyrybos Užduotis</h1>

        @if (!reviewMode)
        {

            <div class="score-label">
                <h2>Taškai: @score</h2>
            </div>

            <Timer @ref="timer" SecondsToRun="20" TimerOut="TimerOut" /> 


            <div class="task-box" style="height: 300px;">
                @if (tasks.Count > currentTaskIndex)
                {
                    int previousIndex = 0;
                    var currentTask = tasks[currentTaskIndex];
                    foreach (var highlight in currentTask.Highlights)
                    {
                        <span @onclick="() => ToggleHighlight(highlight.SpaceIndex)" style="cursor:pointer;">
                            @(currentTask.UserText.Substring(previousIndex, highlight.SpaceIndex - previousIndex))
                        </span>

                        <span style="background-color:@(highlight.IsSelected ? "yellow" : "transparent"); cursor:pointer;"
                              @onclick="() => ToggleHighlight(highlight.SpaceIndex)">
                            &nbsp;
                        </span>

                        previousIndex = highlight.SpaceIndex + 1;
                    }
                    <span>@(currentTask.UserText.Substring(previousIndex))</span>
                }
            </div>

            <div class="options">
                @foreach (var option in tasks[currentTaskIndex].Options)
                {
                    <button class="option" @onclick="() => InsertPunctuation(option)">@option</button>
                }
            </div>
        }

        <!-- Explanation for revisited task -->
        @if (reviewMode)
        {
            <div class="task-box" style="height: 300px;">
                <textarea readonly class="edit-textarea">@tasks[currentTaskIndex].UserText</textarea>
            </div>
            <div class="answer-section">
                <h4>Teisingas atsakymas</h4>
                <p class="explanation-message">@correctAnswer</p>
            </div>
            <div class="answer-section">
                <h4>Paaiškinimas</h4>
                <p class="explanation-message">@explanationMessage</p>
            </div>
            <button class="next-button" @onclick="() => showSummary = true">Grįžti į apžvalgą</button>
        }
        else if (isCorrect)
        {
            <button class="next-button" @onclick="NextTask">Kita užduotis</button>
        }
        else
        {
            <button class="next-button" @onclick="CheckPunctuation">Pateikti</button>
            <button class="next-button" @onclick="SkipTask">Praleisti</button>
        }

        <div class="feedback">
            @if (feedbackMessage != null)
            {
                <p class="@feedbackClass">@feedbackMessage</p>
            }
        </div>

        
    }
    else
    {
        <h1 class="overview-title">Užduoties apžvalga</h1>
        <div class="container">

            <div class="container-bright-long">
                <div class="d-flex justify-content-between align-items-center">
                    <p class="correct-answers">
                        Teisingi atsakymai<br />
                        @correctAnswersCount / @tasks.Count
                    </p>
                    <p class="correct-answers">Surinkta Taškų<br /> @score</p>
                </div>
            </div>



            @for (int i = 0; i < tasks.Count; i++)
            {
                int index = i;
                <button class="summary-button @(taskStatus[i] ? "green" : "red")" @onclick="() => GoToTask(index)">
                    @(i + 1)
                </button>
            }


        </div>
        <button class="next-button" @onclick="StartExercise">Bandyti dar kartą</button>
    }
}
