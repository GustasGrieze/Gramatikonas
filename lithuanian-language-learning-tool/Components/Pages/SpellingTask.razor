<!--// SpellingTask.razor-->
@page "/spellingtask"
<h1>Lietuvių Rašybos Užduotys</h1>

@if (currentQuestionIndex < questions.Count)
{
    <div class="task-box">
        <p>@questions[currentQuestionIndex].Sentence</p>
    </div>
    <div class="options">
        @foreach (var option in questions[currentQuestionIndex].Options)
        {
            <button class="option" @onclick="() => CheckAnswer(option)">@option</button>
        }
    </div>
    @if (showFeedback)
    {
        <div class="feedback @(isCorrect ? "correct" : "incorrect")">
            @feedbackMessage
        </div>
    }
    @if (showNextButton)
    {
        <button class="next-button" @onclick="NextQuestion">Kitas klausimas</button>
    }
}
else
{
    <h2>Užduotys baigtos!</h2>
}

@code {
    private List<SpellingQuestion> questions = new List<SpellingQuestion>
    {
        new SpellingQuestion
        {
            Sentence = "Vilnius yra Liet_vos sostinė.",
            Options = new List<string> { "u", "ū", "o", "uo" },
            CorrectAnswer = "u"
        },
        new SpellingQuestion
        {
            Sentence = "Lietuvoje yra daug gra_ių ežerų.",
            Options = new List<string> { "ž", "š", "s", "z" },
            CorrectAnswer = "ž"
        },
        new SpellingQuestion
        {
            Sentence = "Kaunas yra antras pag_l dydį Lietuvos miestas.",
            Options = new List<string> { "a", "ą", "e", "ę" },
            CorrectAnswer = "a"
        }
    };

    private int currentQuestionIndex = 0;
    private bool showFeedback = false;
    private bool showNextButton = false;
    private bool isCorrect = false;
    private string feedbackMessage = "";

    private void CheckAnswer(string selectedAnswer)
    {
        showFeedback = true;
        showNextButton = true;
        isCorrect = selectedAnswer == questions[currentQuestionIndex].CorrectAnswer;
        feedbackMessage = isCorrect 
            ? "Teisingai!" 
            : $"Neteisingai. Teisingas atsakymas: {questions[currentQuestionIndex].CorrectAnswer}";
    }

    private void NextQuestion()
    {
        currentQuestionIndex++;
        showFeedback = false;
        showNextButton = false;
    }
}

